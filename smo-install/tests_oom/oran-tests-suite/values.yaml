# Copyright Â© 2022 AT&T Intellectual Property
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

testsSuite:
  jenkins: true
  tests: false

oran-tests:
  oranTests:
    name: orantests1
    flag: true
    commitId: 7b4b4007db003d28ee347e3d373e8ac605581cb5

github:
  username: testuser
  password: api-token
gerrit:
  username: testuser
  password: api-token

jenkins:
  controller:
    imagePullPolicy: "IfNotPresent"
    nodePort: 32080
    serviceType: NodePort
    additionalExistingSecrets:
      - name: github-secret-credentials
        keyName: username
      - name: github-secret-credentials
        keyName: password
      - name: gerrit-secret-credentials
        keyName: username
      - name: gerrit-secret-credentials
        keyName: password


    additionalPlugins: 
      - job-dsl:1.77
      - pipeline-githubnotify-step:1.0.5
      - lockable-resources:2.14
      - gerrit-code-review:0.4.4
    JCasC:
      securityRealm: |-
        local:
          allowsSignup: false
          enableCaptcha: false
          users:
          - id: "test"
            name: "Jenkins Admin"
            password: "test"
      authorizationStrategy: |-
        loggedInUsersCanDoAnything:
          allowAnonymousRead: true
      defaultConfig: true
      configScripts:
        welcome-message: |
          jenkins:
            systemMessage: Welcome to the ORAN SMO Package embedded CI\CD server.  This Jenkins is configured and managed 'as code'.
        credentials: |
          credentials:
            system:
              domainCredentials:
              - credentials:
                - usernamePassword:
                    description: "github access username password"
                    id: "github_username_pass"
                    password: ${github-secret-credentials-password}
                    scope: GLOBAL
                    username: ${github-secret-credentials-username}
                - usernamePassword:
                    description: "gerrit access username password"
                    id: "gerrit_username_pass"
                    password: ${gerrit-secret-credentials-password}
                    scope: GLOBAL
                    username: ${gerrit-secret-credentials-username}

        proxy: ""
        views: |
          jenkins:
            views:
            - all:
                name: "all"
            - list:
                columns:
                - "status"
                - "weather"
                - "jobName"
                - "lastSuccess"
                - "lastFailure"
                - "lastDuration"
                - "buildButton"
                includeRegex: "github-manual.*"
                name: "github-manual"
            - list:
                columns:
                - "status"
                - "weather"
                - "jobName"
                - "lastSuccess"
                - "lastFailure"
                - "lastDuration"
                - "buildButton"
                includeRegex: "gerrit-manual.*"
                name: "gerrit-manual"
            - list:
                columns:
                - "status"
                - "weather"
                - "jobName"
                - "lastSuccess"
                - "lastFailure"
                - "lastDuration"
                - "buildButton"
                includeRegex: "github-automatic.*"
                name: "github-automatic"
            - list:
                columns:
                - "status"
                - "weather"
                - "jobName"
                - "lastSuccess"
                - "lastFailure"
                - "lastDuration"
                - "buildButton"
                includeRegex: "gerrit-automatic.*"
                name: "gerrit-automatic"


        proxy: ""
        pipeline-job: | 
          jobs:
            - script: >
                pipelineJob('github-manual-start-test') {
                  parameters {
                    stringParam('BRANCH',"*/main","Branch or Commit ID")
                    stringParam('FLAVOR', "pythonsdk-tests", "Helm override SMO Package flavor, it is obviously the directory in the helm-override folder")
                  }
                  concurrentBuild(false)
                  description('This job is triggered manually to execute the SMO tests on the RUNNING SMO in the K8S cluster')
                  definition {
                    cpsScm {
                      scm {
                        git {
                          remote {
                            github('sebdet/oran-deployment')
                          }
                          branch('$BRANCH')
                          extensions { 
                            cleanBeforeCheckout()
                          }

                        }
                      }
                      scriptPath("jenkins/github/manual-tests-pipeline")
                    }
                  }
                } 
            - script: >
                pipelineJob('github-manual-start-smo') {
                  parameters {
                    stringParam('BRANCH',"*/main","Branch or Commit ID")
                    stringParam('FLAVOR', "pythonsdk-tests", "Helm override SMO Package flavor, it is obviously the directory in the helm-override folder")
                  }
                  description('This job is triggered manually to start SMO in the K8S cluster')
                  concurrentBuild(false)
                  definition {
                    cpsScm {
                      scm {
                        git {
                          remote {
                            github('sebdet/oran-deployment')
                          }
                          branch('$BRANCH')
                          extensions {
                            cleanBeforeCheckout()
                          }
                        }
                      }
                      scriptPath("jenkins/github/manual-start-pipeline")
                    }
                  }
                }
            - script: >
                pipelineJob('github-manual-stop-smo') {
                  parameters {
                    stringParam('BRANCH',"*/main","Branch or Commit ID")
                  }

                  concurrentBuild(false)
                  description('This job is triggered manually to stop the running SMO in the K8S cluster')
                  definition {
                    cpsScm {
                      scm {
                        git {
                          remote {
                            github('sebdet/oran-deployment')
                          }
                          branch('$BRANCH')
                        }
                      }
                      scriptPath("jenkins/github/manual-stop-pipeline")
                    }
                  }
                }
            - script: >
                multibranchPipelineJob('github-automatic-trigger-verify') {
                  description('This job is triggered automatically when pull requests are opened on GITHUB.')
                  triggers {
                    periodic(30)
                  }
                  branchSources {
                    github {
                      id('1') // IMPORTANT: use a constant and unique identifier
                      repoOwner('sebdet')
                      repository('oran-deployment')
                      scanCredentialsId('github_username_pass')
                      buildForkPRHead(false)
                      buildForkPRMerge(false)
                      buildOriginBranch(true)
                      buildOriginBranchWithPR(false)
                      buildOriginPRHead(true)
                      buildOriginPRMerge(false)
                    }
                  }
                  factory {
                    workflowBranchProjectFactory {
                      // Relative location within the checkout of your Pipeline script.
                      scriptPath("jenkins/github/automatic-verify-pipeline")
                    }
                  } 
                }
            - script: >
                multibranchPipelineJob('gerrit-automatic-trigger-verify') {
                  description('This job is triggered automatically when pull requests are opened on LF GERRIT.')
                  triggers {
                    periodic(30)
                  }
                  branchSources {
                    branchSource {
                      source {
                        gerrit {
                          id('2') // IMPORTANT: use a constant and unique identifier
                          credentialsId('gerrit_username_pass')
                          remote("https://gerrit.o-ran-sc.org/r/a/it/dep")
                          traits {
                            changeDiscoveryTrait {
                              queryString("is:open")
                            }
                          }
                        }
                      }
                    }
                  }
                  factory {

                    workflowBranchProjectFactory {
                      // Relative location within the checkout of your Pipeline script.
                      scriptPath("smo-install/jenkins/gerrit/automatic-verify-pipeline")
                    }
                  }
                }

            - script: >
                pipelineJob('gerrit-manual-start-test') {
                  parameters {
                    stringParam('BRANCH',"master","Branch or Commit ID")
                    stringParam('FLAVOR', "pythonsdk-tests", "Helm override SMO Package flavor, it is obviously the directory in the helm-override folder")
                  }
                  concurrentBuild(false)
                  description('This job is triggered manually to execute the SMO tests on the RUNNING SMO in the K8S cluster')
                  definition {
                    cpsScm {
                      scm {
                        git {
                          remote {
                           url('https://gerrit.o-ran-sc.org/r/it/dep')
                          }
                          branch('$BRANCH')
                          extensions {
                            cleanBeforeCheckout()
                          }

                        }
                      }
                      scriptPath("smo-install/jenkins/gerrit/manual-tests-pipeline")
                    }
                  }
                }

            - script: >
                pipelineJob('gerrit-manual-start-smo') {
                  parameters {
                    stringParam('BRANCH',"master","Branch or Commit ID")
                    stringParam('FLAVOR', "pythonsdk-tests", "Helm override SMO Package flavor, it is obviously the directory in the helm-override folder")
                  }
                  description('This job is triggered manually to start SMO in the K8S cluster')
                  concurrentBuild(false)
                  definition {
                    cpsScm {
                      scm {
                        git {
                          remote {
                            url('https://gerrit.o-ran-sc.org/r/it/dep')
                          }
                          branch('$BRANCH')
                          extensions {
                            cleanBeforeCheckout()
                          }
                        }
                      }
                      scriptPath("smo-install/jenkins/gerrit/manual-start-pipeline")
                    }
                  }
                }

            - script: >
                pipelineJob('gerrit-manual-stop-smo') {
                  parameters {
                    stringParam('BRANCH',"master","Branch or Commit ID")
                  }

                  concurrentBuild(false)
                  description('This job is triggered manually to stop the running SMO in the K8S cluster')
                  definition {
                    cpsScm {
                      scm {
                        git {
                          remote {
                            url('https://gerrit.o-ran-sc.org/r/it/dep')
                          }
                          branch('$BRANCH')
                          extensions {
                            cleanBeforeCheckout()
                          }
                        }
                      }
                      scriptPath("smo-install/jenkins/gerrit/manual-stop-pipeline")
                    }
                  }
                }
