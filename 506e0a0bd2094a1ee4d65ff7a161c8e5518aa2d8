{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "820bf46a_e0a5122d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000475
      },
      "writtenOn": "2024-10-22T05:40:45Z",
      "side": 1,
      "message": "avoid taking yaml from running instance as it has running information from environment.",
      "revId": "506e0a0bd2094a1ee4d65ff7a161c8e5518aa2d8",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cef48b09_d49e8211",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001877
      },
      "writtenOn": "2024-10-22T09:58:08Z",
      "side": 1,
      "message": "Couple of additional comments for improvement.",
      "revId": "506e0a0bd2094a1ee4d65ff7a161c8e5518aa2d8",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ad89acd_102ba282",
        "filename": "nonrtric/helm/kongstorage/templates/kongpv.yaml",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1001877
      },
      "writtenOn": "2024-10-22T09:58:08Z",
      "side": 1,
      "message": "Storage class names are specific to the k8s installations and hard-coding the storage class name could create some installation issues in those environments where the storage class name is not available.\n\nIt\u0027s better to not have the storage class here unless there is a specific need to have a storage class.",
      "revId": "506e0a0bd2094a1ee4d65ff7a161c8e5518aa2d8",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f00920f_ef3ee1d5",
        "filename": "nonrtric/helm/kongstorage/templates/kongpv.yaml",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000475
      },
      "writtenOn": "2024-10-22T14:11:32Z",
      "side": 1,
      "message": "@Aravindhan we were facing trouble while installing chart, so we took this approach. Is any better alternative you suggest to handle it.",
      "parentUuid": "9ad89acd_102ba282",
      "revId": "506e0a0bd2094a1ee4d65ff7a161c8e5518aa2d8",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0af51ff_1e1a2e0a",
        "filename": "nonrtric/helm/kongstorage/templates/kongpv.yaml",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1001877
      },
      "writtenOn": "2024-10-23T10:23:43Z",
      "side": 1,
      "message": "@Subash, Setting a default storage class can be an alternate option (when auto provisioning fails pointing at storage class), so that each PV/PVC doesn\u0027t have to specify the storage class.",
      "parentUuid": "5f00920f_ef3ee1d5",
      "revId": "506e0a0bd2094a1ee4d65ff7a161c8e5518aa2d8",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e808315d_4f3dc11a",
        "filename": "nonrtric/helm/kongstorage/templates/kongpv.yaml",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-10-23T10:42:37Z",
      "side": 1,
      "message": "You can set any storage class to be the default storage class as per these instructions:\nhttps://kubernetes.io/docs/tasks/administer-cluster/change-default-storage-class/",
      "parentUuid": "a0af51ff_1e1a2e0a",
      "revId": "506e0a0bd2094a1ee4d65ff7a161c8e5518aa2d8",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum vote is required for the \u0027Code-Review\u0027 label. \t\t\tA minumum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "506e0a0bd2094a1ee4d65ff7a161c8e5518aa2d8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote from \u0027ORAN Required GHA\u0027 and one other CI or committer that is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX,user\u003doran.required.gha AND label:Verified\u003dMAX,count\u003e\u003d2 AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX,user=oran.required.gha AND label:Verified=MAX,count>=2 AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX,user=oran.required.gha","label:Verified=MAX,count>=2"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "506e0a0bd2094a1ee4d65ff7a161c8e5518aa2d8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}