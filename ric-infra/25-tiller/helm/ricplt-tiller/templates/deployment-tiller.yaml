{{/*
   Copyright (c) 2019 AT&T Intellectual Property.
   Copyright (c) 2019 Nokia.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/}}
{{- if .Values.tillers }}
{{- $topCtx :=  . }}
{{- range keys .Values.tillers }}
{{- $ns := . }}
{{- with index $topCtx.Values.tillers . }}
{{- $img := .image.tiller }}
{{- $serviceAccountName := default "tiller" .serviceAccount.name }}
{{- $secretName := default "tiller-secret" .secret.tillerSecretName }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $serviceAccountName }}
  namespace: {{ $ns }}
---  
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: {{ $ns }}-tiller-base
  namespace: {{ $ns }}
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: [ {{ $secretName }} ]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["pods/portforward"]
  verbs: ["create"]
- apiGroups: [""]  
  resources: ["pods"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: {{ $serviceAccountName }}-{{ $ns }}-tiller-base
  namespace: {{ $ns }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ $ns }}-tiller-base
subjects:
  - kind: ServiceAccount
    name: {{ $serviceAccountName }}
    namespace: {{ $ns }}
{{- if .serviceAccount.role }}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: {{ $ns }}-tiller-deployer
  namespace: {{ $ns }}
rules:
{{ toYaml .serviceAccount.role }}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: {{ $serviceAccountName }}-{{ $ns }}-tiller-deployer
  namespace: {{ $ns }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ $ns }}-tiller-deployer
subjects:
  - kind: ServiceAccount
    name: {{ $serviceAccountName }}
    namespace: {{ $ns }}
{{- end }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: helm
    name: tiller
  name: tiller-deploy
  namespace: {{ $ns }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: helm
        name: tiller
    spec:
      automountServiceAccountToken: true
      {{- if $img.repositoryCred }}
      imagePullSecrets:
       - name: {{ $img.repositoryCred }}
      {{- end }}
      containers:
      - env:
        - name: TILLER_NAMESPACE
          value: {{ $ns }}
        - name: TILLER_HISTORY_MAX
          value: "0"
        - name: TILLER_TLS_VERIFY
          value: "1"
        - name: TILLER_TLS_ENABLE
          value: "1"
        - name: TILLER_TLS_CERTS
          value: /etc/certs
        image: {{ if $img.repository }}{{- $img.repository -}} / {{- end -}}{{- $img.name -}}{{- if $img.tag -}} : {{- $img.tag -}} {{- end }}
        imagePullPolicy: {{ default "IfNotPresent" $img.pullPolicy }}
        livenessProbe:
          httpGet:
            path: /liveness
            port: 44135
          initialDelaySeconds: 1
          timeoutSeconds: 1
        name: tiller
        ports:
        - containerPort: 44134
          name: tiller
        - containerPort: 44135
          name: http
        readinessProbe:
          httpGet:
            path: /readiness
            port: 44135
          initialDelaySeconds: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /etc/certs
          name: tiller-certs
          readOnly: true
      serviceAccountName: {{ $serviceAccountName }}
      volumes:
      - name: tiller-certs
        secret:
          secretName: {{ $secretName }}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: helm
    name: tiller
  name: tiller-deploy
  namespace: {{ $ns }}
spec:
  ports:
  - name: tiller
    port: {{ default 44134 .port }}
    targetPort: tiller
  selector:
    app: helm
    name: tiller
  type: ClusterIP
{{- end }}
{{- end }}
{{- end }}